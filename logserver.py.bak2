#!/usr/bin/env python3
from flask import Flask, render_template_string

import re

app = Flask(__name__)

# Syslog regex pattern for typical format
SYSLOG_PATTERN = re.compile(
    r'^(\w{3}\s+\d+\s+\d{2}:\d{2}:\d{2})\s+(\S+)\s+([^\[:]+)(?:\[(\d+)\])?:\s?(.*)$'
)

TEMPLATE = '''
<!doctype html>
<html>
  <head>
    <title>Syslog Table Viewer</title>
    <style>
      table { border-collapse: collapse; width: 100%; }
      th, td { border: 1px solid #ccc; padding: 4px; font-family: monospace; }
      th { background: #eee; }
      tr:nth-child(even) { background: #f9f9f9; }
    </style>
  </head>
  <body>
    <h2>/var/log/syslog (last {{ rows|length }} entries)</h2>
    <table>
      <tr>
        <th>Date/Time</th>
        <th>Host</th>
        <th>Process</th>
        <th>PID</th>
        <th>Message</th>
      </tr>
      {% for row in rows %}
      <tr>
        <td>{{ row[0] }}</td>
        <td>{{ row[1] }}</td>
        <td>{{ row[2] }}</td>
        <td>{{ row[3] or "" }}</td>
        <td>{{ row[4] }}</td>
      </tr>
      {% endfor %}
    </table>
  </body>
</html>
'''

def parse_syslog_line(line):
    m = SYSLOG_PATTERN.match(line)
    if m:
        return m.groups()
    return ("", "", "", "", line.strip())

@app.route('/')
def show_syslog_table():
    rows = []
    try:
        with open('/var/log/syslog') as f:
            for line in f.readlines()[-100:]:
                rows.append(parse_syslog_line(line))
    except Exception as e:
        rows = [("Error", "", "", "", str(e))]
    return render_template_string(TEMPLATE, rows=rows)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=7321)

